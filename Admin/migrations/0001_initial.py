# Generated by Django 3.0.3 on 2024-04-13 05:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('Note', 'Note Added'), ('Followup', 'Followup Added'), ('Quotation', 'Quotation Added'), ('Payment', 'Payment Added'), ('Attachment', 'Attachment Added')], max_length=20)),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Amenities',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Arrival_Departure',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='Query/Quatation/')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=100)),
                ('sort_name', models.CharField(max_length=4)),
                ('nationality', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField()),
                ('base_currency', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Destination',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Expense_servive_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('remarks', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Extra_Meal_Price',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('adult', models.FloatField()),
                ('child', models.FloatField()),
                ('infant', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ferry_Class',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='Query/Attachment/')),
            ],
        ),
        migrations.CreateModel(
            name='Flight',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('image', models.FileField(upload_to='flight/')),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hotel_Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enquiry_number', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('mobile_number', models.CharField(max_length=15)),
                ('alternate_mobile_number', models.CharField(blank=True, max_length=15, null=True)),
                ('inter_domes', models.CharField(blank=True, choices=[('International', 'International'), ('Domestic', 'Domestic')], max_length=20, null=True)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('purpose_of_travel', models.CharField(blank=True, max_length=100, null=True)),
                ('query_title', models.CharField(max_length=100)),
                ('budget', models.CharField(blank=True, max_length=50, null=True)),
                ('adult', models.IntegerField()),
                ('child', models.CharField(blank=True, max_length=50, null=True)),
                ('infants', models.CharField(blank=True, max_length=50, null=True)),
                ('other_information', models.TextField(blank=True, null=True)),
                ('lead_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Connected', 'Connected'), ('Quotation Send', 'Quotation Send'), ('Payment Processing', 'Payment Processing'), ('Payment Done', 'Payment Done'), ('Booking Confirmed', 'Booking Confirmed'), ('Lost', 'Lost'), ('Completed', 'Completed')], max_length=50, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('complete_package_cost', models.FloatField(blank=True)),
                ('received_package_cost', models.FloatField(blank=True)),
                ('balance_package_cost', models.FloatField(blank=True)),
                ('last_updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lead_source',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meal_Plan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurent_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role_Permission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('remarks', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('remarks', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Special_days',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('block_out_from_date', models.DateField()),
                ('block_out_to_date', models.DateField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer_location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('brand', models.CharField(max_length=100)),
                ('image', models.FileField(upload_to='vehicle/')),
                ('sightseeing_capacity', models.IntegerField()),
                ('transfer_capacity', models.IntegerField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('code', models.CharField(max_length=5)),
                ('contact', models.CharField(max_length=15)),
                ('user_type', models.CharField(choices=[('Admin', 'Admin'), ('Operation Person', 'Operation Person'), ('Sales Person', 'Sales Person'), ('Hotel Reservation Person', 'Hotel Reservation Person'), ('Visa Service', 'Visa Service'), ('Account', 'Account'), ('Ground Operation', 'Ground Operation'), ('Hr', 'Hr'), ('Customer Service', 'Customer Service'), ('Marketing Person', 'Marketing Person'), ('Sales + Marketing Person', 'Sales + Marketing Person')], default='Admin', max_length=50)),
                ('is_logged_in', models.CharField(blank=True, max_length=255, null=True)),
                ('tata_tele_agent_no', models.CharField(blank=True, max_length=255, null=True)),
                ('authorization', models.CharField(blank=True, max_length=255, null=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Visa',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('adult_cost', models.FloatField()),
                ('child_cost', models.FloatField()),
                ('infant_cost', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Currency')),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transfer_name', models.CharField(max_length=100)),
                ('transfer_type', models.CharField(choices=[('SIC', 'SIC'), ('PVT', 'PVT'), ('SIC/PVT', 'SIC/PVT')], max_length=20)),
                ('transfer_images', models.FileField(upload_to='Transfer/images/')),
                ('tour_duration', models.CharField(max_length=100)),
                ('timings', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('contact_person_name', models.CharField(max_length=100)),
                ('contact_person_designation', models.CharField(max_length=100)),
                ('contact_person_email', models.EmailField(max_length=254)),
                ('landline_no', models.CharField(max_length=20)),
                ('mob_no', models.CharField(max_length=20)),
                ('contract', models.FileField(upload_to='Supplier/contract/')),
                ('gst_vat', models.CharField(max_length=100)),
                ('zip', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.City')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Country')),
                ('service_type', models.ManyToManyField(to='Admin.Service_type')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.State')),
            ],
        ),
        migrations.CreateModel(
            name='Sightseeing',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('activity_name', models.CharField(max_length=100)),
                ('activity_image', models.FileField(upload_to='Sightseeing/activity_image/')),
                ('tour_duration', models.CharField(max_length=100)),
                ('timings', models.CharField(max_length=100)),
                ('details', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination')),
                ('operating_days', models.ManyToManyField(to='Admin.Day')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurent_location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination')),
            ],
        ),
        migrations.CreateModel(
            name='Restaurent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('image', models.FileField(upload_to='Restaurent/')),
                ('timing', models.CharField(max_length=20)),
                ('meal_prefrence', models.CharField(choices=[('Veg/Non Veg', 'Veg/Non Veg'), ('Pure Veg/Jain Meals', 'Pure Veg/Jain Meals')], max_length=30)),
                ('landmark', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('contact_person', models.CharField(max_length=100)),
                ('contact_person_phone', models.CharField(max_length=20)),
                ('contact_person_email', models.EmailField(max_length=254)),
                ('landline_no', models.CharField(max_length=30)),
                ('restaurent_details', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination')),
                ('restaurant_location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Restaurent_location')),
                ('restaurent_type', models.ManyToManyField(to='Admin.Restaurent_type')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Extra_Meal_Price')),
            ],
        ),
        migrations.CreateModel(
            name='Quatation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='quotation', to='Admin.ActivityHistory')),
                ('attachment', models.ManyToManyField(to='Admin.Attachment')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotations', to='Admin.Lead')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_id', models.CharField(max_length=255)),
                ('payment_link', models.URLField()),
                ('link_expiry_time', models.DateTimeField()),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='Admin.ActivityHistory')),
                ('leads', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='Admin.Lead')),
            ],
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('notes', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='note', to='Admin.ActivityHistory')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='Admin.Lead')),
            ],
        ),
        migrations.AddField(
            model_name='lead',
            name='added_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lead',
            name='destinations',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination'),
        ),
        migrations.AddField(
            model_name='lead',
            name='lead_source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Admin.Lead_source'),
        ),
        migrations.AddField(
            model_name='lead',
            name='operation_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='operation_person', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lead',
            name='sales_person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_person', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lead',
            name='service_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Admin.Service_type'),
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('image', models.FileField(upload_to='Itinerary/images/')),
                ('arrival_departure', models.CharField(choices=[('NA', 'NA'), ('Arrival', 'Arrival'), ('Departure', 'Departure')], max_length=10)),
                ('description', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination', to='Admin.Destination')),
                ('previous_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previous_destination', to='Admin.Destination')),
                ('sightseeing', models.ManyToManyField(to='Admin.Sightseeing')),
                ('transfer', models.ManyToManyField(to='Admin.Transfer')),
            ],
        ),
        migrations.CreateModel(
            name='Hotel_location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination')),
            ],
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('hotel_image', models.FileField(upload_to='Hotel/hotel_image/')),
                ('contact_person', models.CharField(max_length=100)),
                ('tel_no', models.CharField(max_length=20)),
                ('mob_no', models.CharField(max_length=20)),
                ('reservation_email', models.EmailField(max_length=254)),
                ('hotel_contract', models.FileField(upload_to='Hotel/hotel_contract/')),
                ('hotel_address', models.CharField(max_length=100)),
                ('details', models.TextField()),
                ('supplier_own', models.BooleanField(default=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('amenities', models.ManyToManyField(to='Admin.Amenities')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Hotel_Category')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Country')),
                ('destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Destination')),
                ('meal_plan', models.ManyToManyField(to='Admin.Meal_Plan')),
                ('room_type', models.ManyToManyField(to='Admin.Room_type')),
            ],
        ),
        migrations.CreateModel(
            name='Guide',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5)),
                ('mobile', models.CharField(max_length=15)),
                ('alternate_no', models.CharField(max_length=15)),
                ('id_passport', models.CharField(max_length=50)),
                ('car_image', models.FileField(upload_to='Guide/Car/')),
                ('license_image', models.FileField(upload_to='Guide/Licence/')),
                ('language', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now_add=True)),
                ('destination_covered', models.ManyToManyField(to='Admin.Destination')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Followup',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime', models.DateTimeField()),
                ('note', models.TextField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='followups', to='Admin.ActivityHistory')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followup', to='Admin.Lead')),
            ],
        ),
        migrations.CreateModel(
            name='ExtraMeal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('meal_duration', models.CharField(max_length=100)),
                ('short_description', models.TextField()),
                ('description', models.TextField()),
                ('inclusions', models.TextField()),
                ('useful_information', models.TextField()),
                ('import_notes', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Restaurent')),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=5)),
                ('mobile', models.CharField(max_length=15)),
                ('alternate_no', models.CharField(blank=True, max_length=15, null=True)),
                ('passport', models.CharField(max_length=20)),
                ('car_image', models.FileField(upload_to='driver/car/')),
                ('licence_image', models.FileField(upload_to='driver/license/')),
                ('address', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='documents/')),
                ('date', models.DateField(auto_now_add=True)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='Admin.Folder')),
            ],
        ),
        migrations.CreateModel(
            name='ConfirmAttachment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='Admin.ActivityHistory')),
                ('attachment', models.ManyToManyField(to='Admin.File')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachment', to='Admin.Lead')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.State'),
        ),
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_details', models.TextField()),
                ('zip', models.IntegerField()),
                ('address', models.CharField(max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.City')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Country')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Currency')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.State')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pin', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=100)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.City')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.Country')),
                ('registered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='register_by', to=settings.AUTH_USER_MODEL)),
                ('reporting_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporting_to', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Admin.State')),
                ('users', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='activityhistory',
            name='lead',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='Admin.Lead'),
        ),
    ]
